/***********************************************************************
 File generated by Liquidity compiler version 2.0
 (commit 6472808c, compiled on Wed Sep 16 14:15:26 CEST 2020)
 Date: 2020-09-17 12:02:26
 From file: ./extraction/examples/liquidity-extract/tests/CounterCertifiedExtraction.liq
 Options:
  - Inlining: true
  - Simplifications: true
  - Peephole optimizations: true
  - Single line output: false
  - Generate annotations: true
  - Uncurrying: true
***********************************************************************/

parameter %main (or :msg (int %Inc) (int %Dec));
storage (pair int key_hash);
code { DUP ;
       DIP { CDR @st_slash_1 } ;
       CAR @param_slash_2 ;
       LAMBDA @leInt
         (pair int int)
         bool
         { RENAME @i_j_slash_15 ;
           DUP @i_j ;
           CDR @j ;
           DIP { DUP @i_j } ;
           DIP 2 { DROP } ;
           SWAP ;
           CAR @i ;
           COMPARE ;
           LE } ;
       LAMBDA @snd (pair int key_hash) key_hash { RENAME @p_slash_5 ; CDR } ;
       LAMBDA @fst (pair int key_hash) int { RENAME @p_slash_3 ; CAR } ;
       PAIR ;
       LAMBDA @addInt
         (pair int int)
         int
         { RENAME @i_j_slash_7 ;
           DUP @i_j ;
           CDR @j ;
           DIP { DUP @i_j } ;
           DIP 2 { DROP } ;
           SWAP ;
           CAR @i ;
           ADD } ;
       PAIR ;
       LAMBDA
         (pair (pair (pair int key_hash) int)
               (pair (lambda (pair int int) int)
                     (pair (lambda (pair int key_hash) int) (lambda (pair int key_hash) key_hash))))
         (pair int key_hash)
         { RENAME @st_new_balance__addInt_fst_snd_slash_27 ;
           DUP ;
           CAR @st_new_balance_slash_28 ;
           CAR @st ;
           DIP { DUP } ;
           SWAP ;
           CDDDR @snd_slash_6 ;
           DIP { DUP @st } ;
           SWAP ;
           EXEC ;
           DIP 2 { DUP } ;
           DIG 2 ;
           CDAR @addInt_slash_10 ;
           DIP 3 { DUP } ;
           DIG 3 ;
           CAR @st_new_balance_slash_28 ;
           CDR @new_balance ;
           DIP 4 { DUP } ;
           DIG 4 ;
           CDDAR @fst_slash_4 ;
           DIP 4 { DUP @st } ;
           DIG 4 ;
           DIP 5 { DROP 2 } ;
           EXEC ;
           PAIR ;
           EXEC ;
           PAIR } ;
       PAIR @inc_balance ;
       PAIR ;
       LAMBDA @subInt
         (pair int int)
         int
         { RENAME @i_j_slash_11 ;
           DUP @i_j ;
           CDR @j ;
           DIP { DUP @i_j } ;
           DIP 2 { DROP } ;
           SWAP ;
           CAR @i ;
           SUB } ;
       LAMBDA @snd (pair int key_hash) key_hash { RENAME @p_slash_5 ; CDR } ;
       PAIR ;
       LAMBDA @fst (pair int key_hash) int { RENAME @p_slash_3 ; CAR } ;
       PAIR ;
       LAMBDA
         (pair (pair (pair int key_hash) int)
               (pair (lambda (pair int key_hash) int)
                     (pair (lambda (pair int key_hash) key_hash) (lambda (pair int int) int))))
         (pair int key_hash)
         { RENAME @st_new_balance__fst_snd_subInt_slash_32 ;
           DUP ;
           CAR @st_new_balance_slash_33 ;
           CAR @st ;
           DIP { DUP } ;
           SWAP ;
           CDDAR @snd_slash_6 ;
           DIP { DUP @st } ;
           SWAP ;
           EXEC ;
           DIP 2 { DUP } ;
           DIG 2 ;
           CDDDR @subInt_slash_14 ;
           DIP 3 { DUP } ;
           DIG 3 ;
           CAR @st_new_balance_slash_33 ;
           CDR @new_balance ;
           DIP 4 { DUP } ;
           DIG 4 ;
           CDAR @fst_slash_4 ;
           DIP 4 { DUP @st } ;
           DIG 4 ;
           DIP 5 { DROP 2 } ;
           EXEC ;
           PAIR ;
           EXEC ;
           PAIR } ;
       PAIR @dec_balance ;
       PAIR ;
       LAMBDA
         (pair (pair (or :msg (int %Inc) (int %Dec)) (pair int key_hash))
               (pair (pair (lambda
                              (pair (pair (pair int key_hash) int)
                                    (pair (lambda (pair int key_hash) int)
                                          (pair (lambda (pair int key_hash) key_hash) (lambda (pair int int) int))))
                              (pair int key_hash))
                           (pair (lambda (pair int key_hash) int)
                                 (pair (lambda (pair int key_hash) key_hash) (lambda (pair int int) int))))
                     (pair (pair (lambda
                                    (pair (pair (pair int key_hash) int)
                                          (pair (lambda (pair int int) int)
                                                (pair (lambda (pair int key_hash) int) (lambda (pair int key_hash) key_hash))))
                                    (pair int key_hash))
                                 (pair (lambda (pair int int) int)
                                       (pair (lambda (pair int key_hash) int) (lambda (pair int key_hash) key_hash))))
                           (lambda (pair int int) bool))))
         (option (pair (list operation) (pair int key_hash)))
         { RENAME @msg_st__dec_balance_inc_balance_leInt_slash_37 ;
           DUP ;
           CAR @msg_st_slash_38 ;
           CDR @st ;
           DIP { DUP } ;
           SWAP ;
           CAR @msg_st_slash_38 ;
           CAR @msg ;
           IF_LEFT
             { RENAME @i_slash_41 ;
               DIP 2 { DUP } ;
               DIG 2 ;
               CDDDR @leInt_slash_18 ;
               DIP { DUP @i } ;
               SWAP ;
               PUSH int 0 ;
               PAIR ;
               EXEC ;
               IF { DIP 2 { DUP } ;
                    DIG 2 ;
                    CDDAR @inc_balance_slash_31 ;
                    DIP { DUP @i } ;
                    SWAP ;
                    DIP 3 { DUP @st } ;
                    DIG 3 ;
                    PAIR ;
                    DIP { DUP ; CAR ; SWAP ; CDR } ;
                    PAIR ;
                    EXEC ;
                    NIL operation ;
                    PAIR ;
                    SOME }
                  { NONE (pair (list operation) (pair int key_hash)) } ;
               DIP { DROP } }
             { RENAME @i_slash_42 ;
               DIP 2 { DUP } ;
               DIG 2 ;
               CDDDR @leInt_slash_18 ;
               DIP { DUP @i } ;
               SWAP ;
               PUSH int 0 ;
               PAIR ;
               EXEC ;
               IF { DIP 2 { DUP } ;
                    DIG 2 ;
                    CDAR @dec_balance_slash_36 ;
                    DIP { DUP @i } ;
                    SWAP ;
                    DIP 3 { DUP @st } ;
                    DIG 3 ;
                    PAIR ;
                    DIP { DUP ; CAR ; SWAP ; CDR } ;
                    PAIR ;
                    EXEC ;
                    NIL operation ;
                    PAIR ;
                    SOME }
                  { NONE (pair (list operation) (pair int key_hash)) } ;
               DIP { DROP } } ;
           DIP { DROP 2 } } ;
       PAIR @counter ;
       DIP 2 { DUP @st } ;
       DIG 2 ;
       DIP 2 { DUP @param } ;
       DIG 2 ;
       PAIR ;
       PAIR ;
       DUP ;
       CDR @counter_slash_43 ;
       DIP { DUP } ;
       SWAP ;
       CAR @param_st_slash_45 ;
       CDR @st ;
       DIP 2 { DUP } ;
       DIG 2 ;
       CAR @param_st_slash_45 ;
       CAR @param ;
       PAIR ;
       DIP { DUP ; CAR ; SWAP ; CDR } ;
       PAIR ;
       EXEC ;
       IF_NONE { UNIT ; FAILWITH } {} ;
       DIP { DROP 3 } };
